{"version":3,"file":"toast.component.d.ts","sources":["toast.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { ElementRef, ViewContainerRef, Renderer2, Injector, QueryList } from '@angular/core';\nimport { IComponentBase } from '@syncfusion/ej2-angular-base';\nimport { Toast } from '@syncfusion/ej2-notifications';\nimport { ButtonModelPropsDirective } from './buttons.directive';\nexport declare const inputs: string[];\nexport declare const outputs: string[];\nexport declare const twoWays: string[];\n/**\n * Represents the Angular Toast Component\n * ```html\n * <ejs-toast></ejs-toast>\n * ```\n */\nexport declare class ToastComponent extends Toast implements IComponentBase {\n    private ngEle;\n    private srenderer;\n    private viewContainerRef;\n    private injector;\n    containerContext: any;\n    tagObjects: any;\n    beforeClose: any;\n    beforeOpen: any;\n    beforeSanitizeHtml: any;\n    click: any;\n    close: any;\n    created: any;\n    destroyed: any;\n    open: any;\n    childButtons: QueryList<ButtonModelPropsDirective>;\n    tags: string[];\n    /**\n     * Specifies the title to be displayed on the Toast.\n     * Accepts selectors, string values and HTML elements.\n     * @default null\n     */\n    title: any;\n    /**\n     * Specifies the content to be displayed on the Toast.\n     * Accepts selectors, string values and HTML elements.\n     * @default null\n     * @blazortype string\n     */\n    content: any;\n    /**\n     * Specifies the HTML element/element ID as a string that can be displayed as a Toast.\n     * The given template is taken as preference to render the Toast, even if the built-in properties such as title and content are defined.\n     *\n     * {% codeBlock src='toast/template/index.md' %}{% endcodeBlock %}\n     *\n     * @default null\n     */\n    template: any;\n    constructor(ngEle: ElementRef, srenderer: Renderer2, viewContainerRef: ViewContainerRef, injector: Injector);\n    ngOnInit(): void;\n    ngAfterViewInit(): void;\n    ngOnDestroy(): void;\n    ngAfterContentChecked(): void;\n    registerEvents: (eventList: string[]) => void;\n    addTwoWay: (propList: string[]) => void;\n}\n"]}